---
import ImageMod from "@/components/ImageMod.astro";
import config from "@/config/config.json";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

export const prerender = false;

const { hero } = (
  (await getEntry("contact", "-index")) as CollectionEntry<"contact">
).data;

// Get action result for form error handling
import { actions, isInputError } from "astro:actions";
const actionResult = Astro.getActionResult(actions.demo);
const inputErrors = isInputError(actionResult?.error)
  ? actionResult.error.fields
  : {};
type DemoResult = {
  success: boolean;
  message: string;
  data: {
    name: string;
    company_name: string;
    email: string;
    country: string;
    message?: string;
  };
};
const demoResult = actionResult?.data as DemoResult | undefined;
---

<section class="section">
  <div class="container">
    <div class="row">
      <div class="lg:col-6 lg:pe-20 lg:pt-16" data-aos="fade-left-sm">
        {
          hero.subtitle && (
            <p
              class="mb-2 font-medium text-tertiary"
              set:html={markdownify(hero.subtitle)}
            />
          )
        }
        {
          hero.title && (
            <h2 class="md:h1 mb-6" set:html={markdownify(hero.title)} />
          )
        }
        {
          hero.description && (
            <p
              class="text-lg/[inherit]"
              set:html={markdownify(hero.description)}
            />
          )
        }
        {
          hero.list && (
            <div class="mt-10 flex flex-col gap-10 sm:flex-row xl:mt-20">
              {hero.list.map((point) => (
                <div>
                  {point.icon && (
                    <div class="mb-3 flex h-12 w-12 items-center justify-center rounded-full bg-tertiary">
                      <ImageMod
                        class="h-6 w-6 object-cover"
                        src={point.icon}
                        alt={`icon related to ${point.title}`}
                      />
                    </div>
                  )}
                  {point.title && (
                    <h3
                      class="h6 mb-2 mt-5"
                      set:html={markdownify(point.title)}
                    />
                  )}
                  {point.description && (
                    <p
                      class="text-lg/[inherit]"
                      set:html={markdownify(point.description)}
                    />
                  )}
                </div>
              ))}
            </div>
          )
        }
      </div>
      <div
        class="relative pt-24 lg:col-6 lg:pt-16"
        data-aos="fade-left-sm"
        data-aos-delay="200"
      >
        <ImageMod
          class="absolute left-1/2 top-5 -z-10 w-20 -translate-x-1/2 lg:-top-7"
          src={"/images/logo-icon.png"}
          alt="hero image"
          loading="eager"
        />
        <div class="rounded-2xl bg-light p-5 md:p-10">
          {/* Success State */}
          {
            demoResult?.success && (
              <div class="text-center" data-success>
                <div class="mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-green-100 mb-6">
                  <svg
                    class="h-8 w-8 text-green-600"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M5 13l4 4L19 7"
                    />
                  </svg>
                </div>
                <h3 class="text-2xl font-semibold text-gray-900 mb-4">
                  Demo Request Submitted!
                </h3>
                <p class="text-gray-600 mb-6 success-message">
                  {demoResult?.message}
                </p>
                <div class="text-sm text-gray-500">
                  <p>
                    We'll contact you within 24 hours to schedule your
                    personalized demo.
                  </p>
                </div>
              </div>
            )
          }

          {/* Error State */}
          {
            actionResult?.error && (
              <div class="text-center" data-error>
                <div class="mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-red-100 mb-6">
                  <svg
                    class="h-8 w-8 text-red-600"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M6 18L18 6M6 6l12 12"
                    />
                  </svg>
                </div>
                <h3 class="text-2xl font-semibold text-gray-900 mb-4">
                  Submission Failed
                </h3>
                <p class="text-gray-600 mb-6 error-message">
                  {isInputError(actionResult?.error)
                    ? "Please correct the highlighted fields."
                    : actionResult?.error?.message}
                </p>
                <button
                  class="btn btn-regular"
                  type="button"
                  onclick="history.back()"
                >
                  Try Again
                </button>
              </div>
            )
          }

          {/* Default Form State */}
          {
            !demoResult?.success && (
              <form
                class="row g-4"
                method="POST"
                action={actions.demo}
                data-form
              >
                <div class="col-12">
                  <label for="name" class="form-label">
                    Full Name <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="name"
                    name="name"
                    class="form-input"
                    placeholder="Enter your full name"
                    required
                    type="text"
                    value={demoResult?.data?.name || ""}
                    aria-invalid={inputErrors?.name ? "true" : "false"}
                  />
                  {inputErrors?.name && (
                    <p class="text-red-500 text-sm mt-1">
                      {inputErrors.name.join(", ")}
                    </p>
                  )}
                </div>

                <div class="col-12">
                  <label for="email" class="form-label">
                    Business Email <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="email"
                    name="email"
                    class="form-input"
                    placeholder="your.email@company.com"
                    required
                    type="email"
                    value={demoResult?.data?.email || ""}
                    aria-invalid={inputErrors?.email ? "true" : "false"}
                  />
                  {inputErrors?.email && (
                    <p class="text-red-500 text-sm mt-1">
                      {inputErrors.email.join(", ")}
                    </p>
                  )}
                </div>
                <div class="col-12">
                  <label for="company-name" class="form-label">
                    Company Name <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="company-name"
                    name="company_name"
                    class="form-input"
                    placeholder="Your company name"
                    required
                    type="text"
                    value={demoResult?.data?.company_name || ""}
                    aria-invalid={inputErrors?.company_name ? "true" : "false"}
                  />
                  {inputErrors?.company_name && (
                    <p class="text-red-500 text-sm mt-1">
                      {inputErrors.company_name.join(", ")}
                    </p>
                  )}
                </div>
                <div class="col-12">
                  <label for="country" class="form-label">
                    Country <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="country"
                    name="country"
                    class="form-input"
                    placeholder="Enter your country"
                    required
                    type="text"
                    value={demoResult?.data?.country || ""}
                    aria-invalid={inputErrors?.country ? "true" : "false"}
                  />
                  {inputErrors?.country && (
                    <p class="text-red-500 text-sm mt-1">
                      {inputErrors.country.join(", ")}
                    </p>
                  )}
                </div>
                <div class="col-12">
                  <label for="message" class="form-label">
                    Tell us about your export compliance needs
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    class="form-input"
                    placeholder="Describe your current export compliance challenges or what you'd like to see in the demo"
                    rows="3"
                    aria-invalid={inputErrors?.message ? "true" : "false"}
                  >
                    {demoResult?.data?.message || ""}
                  </textarea>
                  {inputErrors?.message && (
                    <p class="text-red-500 text-sm mt-1">
                      {inputErrors.message.join(", ")}
                    </p>
                  )}
                </div>
                <div class="col-12">
                  <button type="submit" class="btn btn-regular">
                    Request Demo
                  </button>
                </div>
              </form>
            )
          }
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // No client-side form state reset required; server action result renders UI.
</script>
